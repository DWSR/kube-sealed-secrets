name: quality
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '25 2 * * 4'

permissions:
  actions: read
  packages: read
  contents: read
  security-events: write
  pull-requests: read
  checks: write

env:
  NUM_PARTITIONS: 2

jobs:
  codeql-go:
    uses: DWSR/actions/.github/workflows/codeql.yml@main
    with:
      language: go
      build-mode: autobuild
  codeql-actions:
    uses: DWSR/actions/.github/workflows/codeql.yml@main
    with:
      language: actions
      build-mode: none
    
  tests:
    runs-on: ubuntu-latest
    name: test ${{ matrix.description }}
    if: github.event_name != 'schedule'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
          cache: true
      - name: Make reports dir
        run: mkdir -p '${{ runner.temp }}/reports'
      - name: Run tests
        run: |
          echo Partition
          echo '${{ toJson(matrix) }}'
          go tool gotestsum \
            --packages "${{ matrix.packages }}" \
            --junitfile '${{ runner.temp }}/reports/run-${{ github.run_number }}.junit.xml' \
            --jsonfile '${{ runner.temp }}/reports/run-${{ github.run_number }}.json' \
            --format github-actions \
            --format-icons text \
            --rerun-fails
      - name: Upload test results
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: TestReports
          path: |
            ${{ runner.temp }}/reports/*.json
            ${{ runner.temp }}/reports/*.junit.xml
          retention-days: 7
        if: always()

  generate-matrix:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' && vars.NUM_PARTITIONS > 1
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
          cache: true
      - name: Make reports dir
        run: mkdir -p ${{ runner.temp }}/reports
      - name: Restore test reports
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: "${{ runner.temp }}/reports"
          key: "test-reports-${{ github.run_number }}"
          restore-keys: |
            test-reports-
      - name: Build matrix
        run: |
          (
            echo -n "test-matrix="
            go list ./... | go tool gotestsum tool ci-matrix --debug \
              --partitions 2 \
              --timing-files '${{ runner.temp }}/reports/*.json'
          ) >> "${GITHUB_OUTPUT}"

  tests-matrix:
    needs: generate-matrix
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' && vars.NUM_PARTITIONS > 1
    strategy:
      fail-fast: false
      matrix: "${{ fromJson(needs.generate-matrix.outputs.test-matrix) }}"
    name: test ${{ matrix.description }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
          cache: true
      - name: Make reports dir
        run: mkdir -p '${{ runner.temp }}/reports'
      - name: Run tests
        run: |
          echo Partition
          echo '${{ toJson(matrix) }}'
          go tool gotestsum \
            --packages "${{ matrix.packages }}" \
            --junitfile '${{ runner.temp }}/reports/run-${{ github.run_number }}-${{ matrix.id }}.junit.xml' \
            --jsonfile '${{ runner.temp }}/reports/run-${{ github.run_number }}-${{ matrix.id }}.json' \
            --format github-actions \
            --format-icons text \
            --rerun-fails
      - name: Upload test results
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: TestReports
          path: |
            ${{ runner.temp }}/reports/*.json
            ${{ runner.temp }}/reports/*.junit.xml
          retention-days: 7
        if: always()

  collect-reports:
    if: always()
    needs:
      - tests-matrix
      - tests
    runs-on: ubuntu-latest
    steps:
      - name: Download test reports
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: TestReports
          path: ${{ runner.temp }}/reports
      - name: Generate test summary
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2.4
        with:
          paths: ${{ runner.temp }}/reports/run-${{ github.run_number }}*.junit.xml
          show: fail, skip
      - name: Prune old reports
        run: |
          ls -lhR '${{ runner.temp }}/reports'
          find '${{ runner.temp }}/reports' -mindepth 1 -mtime +30 -delete
          ls -lhR '${{ runner.temp }}/reports'
      - name: Save test reports
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: "${{ runner.temp }}/reports"
          key: "test-reports-${{ github.run_number }}"

  lint:
    name: lint
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: latest
          only-new-issues: true
