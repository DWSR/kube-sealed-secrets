name: quality
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
          cache: true
      - name: Make reports dir
        run: mkdir -p ${{ runner.temp }}/reports
      - name: Restore test reports
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: "${{ runner.temp }}/reports"
          key: "test-reports-${{ github.run-number }}"
          restore-keys: |
            test-reports-
      - name: Build matrix
        run: |
          (
            echo -n "matrix="
            go list ./... | go tool gotestsum tool ci-matrix --debug \
              --partitions 3 \
              --timing-files '${{ runner.temp }}/reports/*.json' \
          ) >> "${GITHUB_OUTPUT}"
  tests:
    needs: test-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: "${{ fromJson(needs.generate-matrix.outputs.matrix) }}"
    name: test ${{ matrix.description }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
          cache: true
      - name: Make reports dir
        run: mkdir -p '${{ runner.temp }}/reports'
      - name: Run tests
        run: |
          echo Partition
          echo '${{ toJson(matrix) }}'
          go tool gotestsum \
            --packages "${{ matrix.packages }}" \
            --junitfile '${{ runner.temp }}/reports/run-${{ github.run-number }}-${{ matrix.id }}.junit.xml' \
            --jsonfile '${{ runner.temp }}/reports/run-${{ github.run-number }}-${{ matrix.id }}.json' \
            --format github-actions \
            --format-icons text \
            --rerun-fails
      - name: Upload test results
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: TestResults
          path: |
            ${{ runner.temp }}/reports/*.json
            ${{ runner.temp }}/reports/*.junit.xml
          retention-days: 7
        if: always()
  collect-reports:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Download test reports
        uses: actions/download-artifact
        with:
          name: TestReports
          path: ${{ runner.temp }}/reports
      - name: Save test reports
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: "${{ runner.temp }}/reports"
          key: "test-reports-${{ github.run-number }}"
      - name: Prune old reports
        run: |
          ls -lhR '${{ runner.temp }}/reports'
          find '${{ runner.temp }}/reports' -mindepth 1 -mtime +30 -delete
          ls -lhR '${{ runner.temp }}/reports'

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: latest
          only-new-issues: true
